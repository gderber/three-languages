#!/bin/bash 


DEBUG=0
# How random is RANDOM? 

SEED=$(head -1 /dev/urandom | od -N 1 | awk '{ print $2 }'| sed s/^0*//)

RANDOM=$SEED # Reseed the random number generator


PIPS=6 # A die has 6 pips. 
MAXTHROWS=5   # Increase this if you have nothing 
              # better to do with your time. 
throw=0 # Number of times the dice have been cast. 

ones=0 # Must initialize counts to zero, 
twos=0 #+ since an uninitialized variable is null, NOT zero. 
threes=0 
fours=0 
fives=0 
sixes=0 

print_result () { 
    echo 
    echo "ones = $ones" 
    echo "twos = $twos" 
    echo "threes = $threes" 
    echo "fours = $fours" 
    echo "fives = $fives" 
    echo "sixes = $sixes" 
    echo 
}

function print_unicode () {
    case "$1" in
	0) DIEROLL=$'\u2680';;
	1) DIEROLL=$'\u2681';;
	2) DIEROLL=$'\u2682';;
	3) DIEROLL=$'\u2683';;
	4) DIEROLL=$'\u2684';;
	5) DIEROLL=$'\u2685';;
    esac
}

update_count() { 
    case "$1" in 
	0) ((ones++));; # Since a die has no "zero", this corresponds to 1. 
	1) ((twos++));; # And this to 2. 
	2) ((threes++));; # And so forth. 
	3) ((fours++));; 
	4) ((fives++));; 
	5) ((sixes++));; 
    esac 
} 

function main () {
    if [ $DEBUG -eq 1 ]; then
	echo "$1"
    fi

    while [ -n "$1" ]; do
	case "$1" in
	    -d|--dice) MAXTHROWS=$2; shift 2 ;;
	    -s|-p|--sides|--pips) PIPS=$2; shift 2 ;;
	    -c|--count) SUMMARY=y; shift 1;;
	    *) help; exit;;
	esac
    done

    if [ $DEBUG -eq 1 ]; then
	echo $PIPS
	echo $MAXTHROWS
    fi
    
    while [ "$throw" -lt "$MAXTHROWS" ] 
    do 
	let "die1 = RANDOM % $PIPS" 
	if [ "${SUMMARY}" == "y" ]; then
	    update_count $die1 
	fi

	if [ $PIPS -lt 7 ]; then
	    print_unicode $die1
	else
	    DIEROLL=$((die1 + 1))
	fi
	echo -n "${DIEROLL} "

	let "throw += 1" 
    done 
    echo
    
    if [ "${SUMMARY}" == "y" ] && [ ${PIPS} -lt 7 ]; then
	print_result 
    fi
}

main $@
exit $? 
#exit 0

# The scores should distribute evenly, assuming RANDOM is random. 
# With $MAXTHROWS at 600, all should cluster around 100, 
#+ plus-or-minus 20 or so. 

# # Keep in mind that RANDOM is a ***pseudorandom*** generator, 
#+ and not a spectacularly good one at that. 
# Randomness is a deep and complex subject. 
# Sufficiently long "random" sequences may exhibit 
#+ chaotic and other "non-random" behavior. 
# Exercise (easy): 
# --------------- 
# Rewrite this script to flip a coin 1000 times. 
# Choices are "HEADS" and "TAILS."
